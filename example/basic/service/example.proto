syntax = "proto3";

package example.basic.service;

// Only annotation
import "example/basic/service/annotation.proto";

// well known protos
import "google/api/annotations.proto";
import "google/protobuf/source_context.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/compiler/plugin.proto";
import "google/protobuf/api.proto";
import "google/protobuf/type.proto";

// well known types
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/any.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

// user defined
import "example/basic/service/dependency.proto";
import "example/basic/shared.proto";

message Message {
  string value = 1;
  google.protobuf.Timestamp time = 2;
  google.protobuf.Empty empty = 3;
  google.protobuf.Duration duration = 4;
  google.protobuf.Any anyValue = 5;
  google.protobuf.FieldMask fieldMask = 6;
  google.protobuf.Struct struct = 7;
  google.protobuf.StringValue strValue = 8;
  google.protobuf.BytesValue bytesValue = 9;
  google.protobuf.Int32Value int32Value= 10;
  google.protobuf.UInt32Value uint32Value = 11;
  google.protobuf.Int64Value int64Value = 12;
  google.protobuf.UInt64Value uint64Value = 13;
  google.protobuf.FloatValue floatValue = 14;
  google.protobuf.DoubleValue doubleValue = 15;
  google.protobuf.BoolValue boolValue = 16;
  repeated string items = 17;
  DependencyMessage dep = 18;
  Shared shared = 19;
  Enum status = 20;
  double double = 21;
  float float = 22;
  int64 int64 = 23;
  uint64 uint64 = 24;
  sint64 sint64 = 25;
  fixed64 fixed64 = 26;
  sfixed64 sfixed64 = 27;
  int32 int32 = 28;
  uint32 uint32 = 29;
  sint32 sint32 = 30;
  fixed32 fixed32 = 31;
  sfixed32 sfixed32 = 32;
  string string = 33;
  bytes byte = 34;
}

enum Enum {
	VALUE_1 = 0;
	VALUE_2 = 1;
}

service API {
  rpc WellKnown(google.protobuf.Empty) returns (google.protobuf.Timestamp) {
    option (google.api.http) = {
      post : "/v1/wellknown"
      body : "*"
    };
  }
  rpc HasDependency(DependencyMessage) returns (Response) {
    option (google.api.http) = {
      post : "/v1/dependency"
      body : "*"
    };
	}
  rpc Method(Request) returns (Response) {
    option (google.api.http) = {
      post : "/v1/method"
      body : "*"
    };
	}
}

message Request {
}

message Response {
  repeated Message message = 1;
  Nested nested = 2;

  message Nested {
    string value = 1;
  }
}
